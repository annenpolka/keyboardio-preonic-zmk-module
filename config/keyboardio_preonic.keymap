/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

//#define PREONIC_ORTHO   1
//#define PREONIC_MIT     1

#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    /*#if defined(PREONIC_ORTHO)
    chosen {
       zmk,matrix_transform = &ortho_transform;
    };
#endif*/
    /*   sensors: sensors {
        compatible = "zmk,keymap-sensors";
        //sensors = <&right_encoder>;
        triggers-per-rotation = <20>;
    };*/

    combos {
        compatible = "zmk,combos";

        rpar {
            bindings = <&kp RPAR>;
            key-positions = <23 22>;
            layers = <1 0 4>;
        };

        lpar {
            bindings = <&kp LPAR>;
            key-positions = <18 19>;
            layers = <0 4 1>;
        };
    };

    behaviors {
        td_mt_esc_caps: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_MOD_TAP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mt LSHFT ESC>, <&kp CAPSLOCK>;
        };

        bs_dl: bksp_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSP_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DEL>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <0>;
        };

        mt_t: behavior_mod_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_HOLD";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <300>;
            bindings = <&kp>, <&kp>;
        };

        mt_bs_del: mod_tap_bs_del {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_BS_DEL";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&bs_dl>;
        };

        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LSHFT>, <&kp CAPS>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <215>;
            quick-tap-ms = <195>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            /*quick_tap_ms = <0>;*/
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <215>;
            quick-tap-ms = <195>;
            require-prior-idle-ms = <100>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            label = "qwerty";
            bindings = <
                                                                                                         &kp X    &mo 7     &kp K_MUTE
&gresc               &kp N1     &kp N2    &kp N3    &kp N4  &kp N5     &kp N6         &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&lt 9 TAB            &kp Q      &kp W     &kp E     &kp R   &kp T      &kp Y          &kp U   &kp I      &kp O    &kp P     &kp BSLH
&mt_bs_del LCTRL 0   &kp A      &kp S     &kp D     &kp F   &kp G      &kp H          &kp J   &kp K      &kp L    &kp SEMI  &kp SINGLE_QUOTE
&sk LSHFT            &kp Z      &kp X     &kp C     &kp V   &kp B      &kp N          &kp M   &kp COMMA  &kp DOT  &kp FSLH  &mt RSHIFT RET
&none                &kp LCTRL  &kp LGUI  &kp LALT  &mo 5   &kp SPACE  &kp BACKSPACE  &mo 6   &kp LEFT   &kp UP   &kp DOWN  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };

        CMK-DH {
            bindings = <
                                                                        &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans
&trans  &trans  &trans  &kp F   &kp P   &kp B   &kp J   &kp L   &kp U   &kp Y   &kp SEMI  &trans
&trans  &trans  &kp R   &kp S   &kp T   &kp G   &kp M   &kp N   &kp E   &kp I   &kp O     &trans
&trans  &trans  &trans  &trans  &kp D   &kp V   &kp K   &kp H   &trans  &trans  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans
            >;

            label = "cmkdh";
        };

        CMK {
            bindings = <
                                                                           &trans   &trans    &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&trans  &kp Q   &kp W   &kp F   &kp P   &kp G   &kp J   &kp L   &kp U      &kp Y    &kp SEMI  &kp BSLH
&trans  &kp A   &kp R   &kp S   &kp T   &kp D   &kp H   &kp N   &kp E      &kp I    &kp O     &kp APOS
&trans  &kp Z   &kp X   &kp C   &kp V   &kp B   &kp K   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans   &trans    &trans
            >;

            label = "CMK";
        };

        AS_CMK_DH {
            bindings = <
                                                                           &trans   &trans    &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&trans  &kp Q   &kp W   &kp F   &kp P   &kp B   &kp J   &kp L   &kp U      &kp Y    &kp SEMI  &kp EQUAL
&trans  &kp A   &kp R   &kp S   &kp T   &kp G   &kp M   &kp N   &kp E      &kp I    &kp O     &kp APOS
&trans  &kp Z   &kp X   &kp C   &kp D   &kp V   &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans   &trans    &trans
            >;

            label = "AS_CMK_DH";
        };

        HRM_CMK_DH {
            bindings = <
                                                                           &trans   &trans    &trans
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp MINUS
&trans  &kp Q   &kp W   &kp F   &kp P   &kp B   &kp J   &kp L   &kp U      &kp Y    &kp SEMI  &kp BSLH
&trans  &kp A   &kp R   &kp S   &kp T   &kp G   &kp M   &kp N   &kp E      &kp I    &kp O     &kp APOS
&trans  &kp Z   &kp X   &kp C   &kp D   &kp V   &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans   &trans    &trans
            >;

            label = "HRM_CMK_DH";
        };

        lower {
            bindings = <
                                                                        &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "lower";
        };

        raise {
            bindings = <
                                                                        &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "raise";
        };

        k_sys {
            bindings = <
                                                                                                            &trans  &trans  &trans
&trans        &to 1         &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &to 0   &trans
&trans        &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&out OUT_TOG  &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &kp S   &trans
&trans        &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &studio_unlock
            >;

            label = "k_sys";
        };

        adjust {
            bindings = <
                                                                        &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "adjust";
        };

        shorts {
            bindings = <
                                                                        &trans  &trans  &trans
&trans  &trans  &trans  &trans  &kp RS(LG(N4))  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "shorts";
        };

        reserved {
            bindings = <
                                                                        &trans  &trans  &trans
&trans  &to 1   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &to 0   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp S   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &studio_unlock
            >;

            label = "reserved";
        };
    };
    
    /*
    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <20>;
    };
    */

    conditional_layers {
        compatible = "zmk,conditional-layers";

        sys {
            if-layers = <7 8>;
            then-layer = <10>;
        };
    };
};
